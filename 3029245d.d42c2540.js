(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{62:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(2),o=n(6),i=(n(0),n(74)),r={id:"component.md",title:"Component",sidebar_label:"Component",slug:"/component"},l={unversionedId:"component.md",id:"component.md",isDocsHomePage:!1,title:"Component",description:"Components are the most basic building block of an application.",source:"@site/docs\\component.md",slug:"/component",permalink:"/vermillion-docusaurus/docs/component",editUrl:"https://github.com/mfpjayb/vermillion-docusaurus/docs/component.md",version:"current",sidebar_label:"Component",sidebar:"someSidebar",previous:{title:"Module",permalink:"/vermillion-docusaurus/docs/module"},next:{title:"Router",permalink:"/vermillion-docusaurus/docs/router"}},c=[{value:"Structure",id:"structure",children:[]},{value:"Data binding",id:"data-binding",children:[]},{value:"Event binding",id:"event-binding",children:[]},{value:"Hooks",id:"hooks",children:[]},{value:"Conditional rendering",id:"conditional-rendering",children:[]},{value:"List Rendering",id:"list-rendering",children:[]},{value:"Child Component",id:"child-component",children:[]},{value:"Props",id:"props",children:[]},{value:"Custom Directives",id:"custom-directives",children:[]},{value:"View content",id:"view-content",children:[]}],p={rightToc:c};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Components are the most basic building block of an application.\nIt is composed of view and logic of a component and in the future a scoped style will be added.\nIt is recommended for components to have a single responsibility to make it maintainable and more reusable."),Object(i.b)("h2",{id:"structure"},"Structure"),Object(i.b)("p",null,"Component is composed of view and logic.\nInside the ",Object(i.b)("inlineCode",{parentName:"p"},"<template></template>")," tag is the view of the component.\nThe template tag must have a single child only or it will throw an error."),Object(i.b)("p",null,"Under the template tags is the component logic.\nHere we can find the methods that manipulates the view and the state of the component."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"<template>\n    ... // Template\n</template>\n\nexport default class SampleComponent {\n    ... // Logic\n}\n")),Object(i.b)("h2",{id:"data-binding"},"Data binding"),Object(i.b)("p",null,"Data binding is a way to synchronize the data from logic to view and vise versa."),Object(i.b)("h4",{id:"attribute-binding"},"Attribute binding"),Object(i.b)("p",null,"Here is an example on how to bind a property from the logic into an attribute of view:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"<template>\n    <h1 id={this.id}></h1>\n</template>\n\nexport default class SampleComponent {\n    constructor() {\n        this.id = 'sample-id';\n    }\n}\n")),Object(i.b)("h4",{id:"model-binding"},"Model binding"),Object(i.b)("p",null,"Model binding is a two way binding of data.\nEvery time the model is changed from the view, the model in logic will be updated and the same thing will happen when the model is updated from the logic."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"<template>\n    <input view:model={this.sampleModel} type=\"text\" />\n</template>\n\nexport default class SampleComponent {\n    constructor() {\n        this.sampleModel = '';\n    }\n}\n")),Object(i.b)("h2",{id:"event-binding"},"Event binding"),Object(i.b)("h4",{id:"event-binding-1"},"Event binding"),Object(i.b)("p",null,"Event binding is a way to attach an event into an element."),Object(i.b)("p",null,"Here's an example on how to attach a click event to a button:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"<template>\n    <button on:click={this.clickMe}>Click Me</button>\n</template>\n\nexport default class SampleComponent {\n    clickMe() {\n        console.log('I was clicked');\n    }\n}\n")),Object(i.b)("p",null,"Here is a list of available events from ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.w3schools.com/jsref/dom_obj_event.asp"}),"w3schools.com"),"."),Object(i.b)("h2",{id:"hooks"},"Hooks"),Object(i.b)("p",null,"Hooks are functions that lets you run a block of codes when your component triggers a lifecycle event."),Object(i.b)("p",null,"Below are the available lifecycle hooks:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Hooks"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null})))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$onInit"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Triggers right after the component constructor is called. Props and plugins are already available in this hook.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$onViewInit"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Triggers when the component's view building process starts.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$afterViewInit"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Triggers after the component's view building process is done.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$afterInit"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Triggers after the initialization process of a component is completed.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$onDestroy"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Triggers when the component's destruction process starts.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$afterDestroy"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Triggers after the component's destruction process is done.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$onPropsUpdated"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Triggers when props is changed from the parent component.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$onChange"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Triggers when component's change detection starts.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"$afterChange"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Triggers when component's change detection is done.")))),Object(i.b)("h2",{id:"conditional-rendering"},"Conditional rendering"),Object(i.b)("p",null,"Conditional rendering is used to conditionally render an element in the dom.\nIt uses the ",Object(i.b)("inlineCode",{parentName:"p"},"view:if")," directive which removes an element from the dom if the value is a falsy and append the element if otherwise."),Object(i.b)("p",null,"Here's an example on how to use conditional rendering:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"<template>\n    <h1 view:if={this.toggle}></h1>\n</template>\n\nexport default class SampleComponent {\n    constructor() {\n        this.toggle = true;\n    }\n}\n")),Object(i.b)("h2",{id:"list-rendering"},"List Rendering"),Object(i.b)("p",null,"List rendering uses ",Object(i.b)("inlineCode",{parentName:"p"},"view:for")," directive and it allows us to render a list of element based on the given array of data."),Object(i.b)("p",null,"Here's an example on how to use list rendering:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"<template>\n    <p view:for={this.array}>Hello World!</p>\n</template>\n\nexport default class SampleComponent {\n    constructor() {\n        this.array = [1, 2, 3];\n    }\n}\n")),Object(i.b)("h4",{id:"list-item-name"},"List item name"),Object(i.b)("p",null,"List item uses ",Object(i.b)("inlineCode",{parentName:"p"},"view:for-item")," directive.\nIt allows the developer to set the variable name of the list item and display it in view.\nIf no list item directive is provided it is ",Object(i.b)("inlineCode",{parentName:"p"},"$item")," by default."),Object(i.b)("p",null,"Here's an example on how to use list item directive:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"<template>\n    <p view:for={this.array} view:for-item=\"listItem\">{listItem}</p>\n</template>\n\nexport default class SampleComponent {\n    constructor() {\n        this.array = ['foo', 'bar', 'bazz'];\n    }\n}\n")),Object(i.b)("p",null,"The example code above will generate list of element that looks like the following."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"<p>foo</p>\n<p>bar</p>\n<p>bazz</p>\n")),Object(i.b)("h4",{id:"list-index"},"List index"),Object(i.b)("p",null,"List index uses ",Object(i.b)("inlineCode",{parentName:"p"},"view:for-index")," directive.\nIt allows the developer to set the variable name of the list index.\nIf no list index directive is provided it is ",Object(i.b)("inlineCode",{parentName:"p"},"$index")," by default."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"<template>\n    <p view:for={this.array} view:for-index=\"listIndex\">{listIndex}</p>\n</template>\n\nexport default class SampleComponent {\n    constructor() {\n        this.array = ['foo', 'bar', 'bazz'];\n    }\n}\n")),Object(i.b)("p",null,"The example code above will generate list of element that looks like the following."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),"<p>0</p>\n<p>1</p>\n<p>2</p>\n")),Object(i.b)("h2",{id:"child-component"},"Child Component"),Object(i.b)("p",null,"Child component is a component rendered inside a component."),Object(i.b)("p",null,"Here's an example on how to render a component:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import ChildComponent from './ChildComponent';\n\n<template>\n    <div>\n        <ChildComponent />\n    </div>\n</template>\n\nexport default class SampleComponent { }\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Component name must start with a capital letter."))),Object(i.b)("h2",{id:"props"},"Props"),Object(i.b)("p",null,"Props are properties passed down from the parent component to child component."),Object(i.b)("p",null,"Here's an example on how to pass a property from parent to child component:"),Object(i.b)("h5",{id:"parent-component"},"Parent component"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// ./SampleComponent.js\nimport ChildComponent from './ChildComponent';\n\n<template>\n    <ChildComponent sampleProps={this.number} />\n</template>\n\nexport default class SampleComponent {\n    constructor() {\n        this.number = 123;\n    }\n}\n")),Object(i.b)("h5",{id:"child-component-1"},"Child component"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// ./ChildComponent.js\n<template>\n    <h1>Child Component</h1>\n</template>\n\nexport default class ChildComponent {\n    constructor() {\n        console.log(this.$props.sampleProps); // 123\n    }\n}\n")),Object(i.b)("h2",{id:"custom-directives"},"Custom Directives"),Object(i.b)("p",null,"Custom directive let's us create our own directive that can be used inside our views.\nDirectives are classes that inherits the ",Object(i.b)("inlineCode",{parentName:"p"},"Directive")," class of vermillion framework."),Object(i.b)("h4",{id:"create-a-directive"},"Create a directive"),Object(i.b)("p",null,"Here's an example on how to create a custom directive:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// ./Color.directive.js\nimport { Directive } from 'vermillion';\n\nexport default class Color extends Directive {\n    constructor(props) {\n        // props argument in super is required if constructor is present\n        super(props);\n    }\n\n    $onInit() {\n        this.changeColor();\n    }\n\n    $onPropsUpdated() {\n        this.changeColor();\n    }\n\n    changeColor() {\n        this.element.style.color = this.$props.color;\n    }\n}\n")),Object(i.b)("p",null,"The sample code above is a directive to change the text color of an element."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"If constructor is called, a ",Object(i.b)("inlineCode",{parentName:"p"},"super")," call expression with ",Object(i.b)("inlineCode",{parentName:"p"},"props")," argument is require."))),Object(i.b)("h4",{id:"register-a-directive"},"Register a directive"),Object(i.b)("p",null,"Directive needs to be registered in the module before we can use it."),Object(i.b)("p",null,"Here's an example on how to register a directive:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { Module } from 'vermillion';\nimport Color from './Color.directive';\n\nconst module = new Module({\n    ...\n});\n\nmodule.directive(Color, {});\n")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"directive")," method in module accepts two arguments.\nFirst is the directive itself and second is an optional argument which is a data for the directive.\nThe data is accessible inside the constructor for the directive."),Object(i.b)("p",null,"Here's an example on how to access the data inside the directive:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"export default class Color extends Directive {\n    constructor(props) {\n        super(props);\n        this.directiveData = props.data.module._directivesData.color;\n    }\n}\n")),Object(i.b)("h4",{id:"using-the-directive"},"Using the directive"),Object(i.b)("p",null,"Custom directive uses the namespace ",Object(i.b)("inlineCode",{parentName:"p"},"directive:")," or ",Object(i.b)("inlineCode",{parentName:"p"},"d:")," in view followed by the class name of the directive with the first letter in lower case."),Object(i.b)("p",null,"Example: ",Object(i.b)("inlineCode",{parentName:"p"},"SampleDirective")," will be called as ",Object(i.b)("inlineCode",{parentName:"p"},"d:sampleDirective"),"."),Object(i.b)("p",null,"Here's an example on how to use the ",Object(i.b)("inlineCode",{parentName:"p"},"Color")," directive created above:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"<template>\n    <div>\n        <h1 d:color={this.color}>Change My Color</h1>\n        <button on:click={this.changeColor}>Change Color<button>\n    </div>\n</template>\n\nexport default class App {\n    constructor() {\n        this.color = {\n            color: 'green'\n        };\n    }\n\n    changeColor() {\n        this.color = {\n            color: 'red'\n        };\n    }\n}\n")),Object(i.b)("h2",{id:"view-content"},"View content"),Object(i.b)("p",null,"View content let's us display content from the parent component into the child component's view."),Object(i.b)("p",null,"Here's an example on how to use view content:"),Object(i.b)("h4",{id:"parent-component-1"},"Parent component"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// ./Parent.js\nimport Child from './Child';\n\n<template>\n    <div>\n        <Child>\n            <h1>I am the view content.</h1>\n        </Child>\n    </div>\n</template>\n\nexport default class Parent {}\n")),Object(i.b)("h4",{id:"child-component-2"},"Child component"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// ./Child.js\n\n<template>\n    <view-content></view-content>\n</template>\n\nexport default class Child {}\n")),Object(i.b)("p",null,"In the example above,\nthe ",Object(i.b)("inlineCode",{parentName:"p"},"<h1>I am the view content.</h1>")," element which is inside the ",Object(i.b)("inlineCode",{parentName:"p"},"<Child>...</Child>"),"\ncomponent tags will be displayed in the child component's view where the ",Object(i.b)("inlineCode",{parentName:"p"},"<view-content></view-content>")," tag is located."))}s.isMDXComponent=!0},74:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var a=n(0),o=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),s=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=s(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=s(n),m=a,u=b["".concat(r,".").concat(m)]||b[m]||d[m]||i;return n?o.a.createElement(u,l(l({ref:t},p),{},{components:n})):o.a.createElement(u,l({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);